{"version":3,"sources":["components/Statistics/Statistics.module.css","components/SectionHeader/SectionHeader.module.css","components/Feedbackoptions/Feedbackoptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/Feedbackoptions/Feedbackoptions.js","components/SectionHeader/SectionHeader.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statistics","percentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","feedbackbtn","type","value","onClick","SectionHeader","title","children","section","header","Notification","notification","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","LeaveFeedback","target","setState","prevState","isShowStat","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,MAAQ,0BAA0B,WAAa,+BAA+B,OAAS,6B,gBCAzPD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,OAAS,gC,qBCApED,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,aAAe,qC,sLCsBlBC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yBAAKC,UAAWC,IAAEC,YAChB,0BAAMF,UAAWC,IAAEN,MAAnB,UAAiCA,EAAjC,KACA,0BAAMK,UAAWC,IAAEL,SAAnB,aAAuCA,EAAvC,KACA,0BAAMI,UAAWC,IAAEJ,KAAnB,SAA+BA,EAA/B,KACA,0BAAMG,UAAWC,IAAEH,OAAnB,WAAmCA,EAAnC,KACA,0BAAME,UAAWC,IAAEE,YAAnB,cAA2CJ,EAA3C,Q,gBCWWK,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAElC,OADaC,OAAOC,KAAKH,GACbI,KAAI,SAAAC,GAAG,OACjB,4BAAQV,UAAWC,IAAEU,YACnBD,IAAKA,EACLE,KAAK,SACLC,MAAOH,EACPI,QAASR,GAAkBI,O,OCKlBK,EAZO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpB,yBAAKjB,UAAWkB,WACd,wBAAIlB,UAAWmB,UAASH,GACvBC,I,OCGUG,EANM,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OAAe,uBAAGhB,UAAWqB,gBAAeL,ICsDlDM,G,kNAhDbC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAA5B5B,EADiB,EACjBA,KAAME,EADW,EACXA,IACd,OAAOF,EAFkB,EACNC,QACKC,G,EAG1B4B,gCAAkC,WAChC,OAAOC,KAAKC,MAAM,IAAM,EAAKH,qBAAuB,EAAKD,MAAM5B,O,EAGjEiC,cAAgB,YAAiB,IACvBf,EADsB,EAAbgB,OACThB,MACR,EAAKiB,UAAS,SAAAC,GAAS,sBAClBlB,EAAQkB,EAAUlB,GAAS,O,uDAKhC,IAAMmB,EAAaC,KAAKT,qBAAuB,EAC/C,OACE,oCACE,kBAAC,EAAD,CAAeR,MAAM,yBACnB,kBAAC,EAAD,CACEX,QAAS4B,KAAKV,MACdjB,gBAAiB2B,KAAKL,iBAI1B,kBAAC,EAAD,CAAeZ,MAAM,cAEjBgB,EACE,kBAAC,EAAD,iBAAgBC,KAAKV,MAArB,CACEzB,MAAOmC,KAAKT,qBACZzB,mBAAoBkC,KAAKR,qCACtB,kBAAC,EAAD,CAAcT,MAAM,4B,GAzCrBkB,cCLlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2de417c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"good\":\"Statistics_good__18zd4\",\"neutral\":\"Statistics_neutral__3mDg3\",\"bad\":\"Statistics_bad__1V8Qu\",\"total\":\"Statistics_total__2pGqP\",\"percentage\":\"Statistics_percentage__3inQt\",\"canvas\":\"Statistics_canvas__28yF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SectionHeader_section__3TW1a\",\"header\":\"SectionHeader_header__3lISD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackbtn\":\"Feedbackoptions_feedbackbtn__1ZKrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.statistics}>\n    <span className={s.good}> Good: {good} </span>\n    <span className={s.neutral}> Neutral: {neutral} </span>\n    <span className={s.bad}> Bad: {bad} </span>\n    <span className={s.total}> Total: {total} </span>\n    <span className={s.percentage}> Positive: {positivePercentage}% </span>\n  </div>\n)\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n}\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Feedbackoptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const keys = Object.keys(options);\n  return keys.map(key =>\n    <button className={s.feedbackbtn}\n      key={key}\n      type=\"button\"\n      value={key}\n      onClick={onLeaveFeedback}>{key}\n    </button>)\n\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n}\n\nexport default FeedbackOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { section, header } from './SectionHeader.module.css';\n\nconst SectionHeader = ({ title, children }) => (\n  <div className={section}>\n    <h2 className={header}>{title}</h2>\n    {children}\n  </div>\n)\n\nSectionHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n}\n\nexport default SectionHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { notification } from './Notification.module.css';\n\nconst Notification = ({ title }) => <p className={notification}>{title}</p>;\n\nNotification.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nexport default Notification;","import React, { Component } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/Feedbackoptions/Feedbackoptions';\nimport SectionHeader from './components/SectionHeader/SectionHeader';\nimport Notification from './components/Notification/Notification';\n\nimport './css/body.css';\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  countTotalFeedback = () => {\n    const { good, bad, neutral } = this.state\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor(100 / this.countTotalFeedback() * this.state.good)\n  }\n\n  LeaveFeedback = ({ target }) => {\n    const { value } = target\n    this.setState(prevState => (\n      { [value]: prevState[value] + 1 }\n    ))\n  }\n\n  render() {\n    const isShowStat = this.countTotalFeedback() > 0\n    return (\n      <>\n        <SectionHeader title='Please leave feedback'>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.LeaveFeedback}\n          />\n        </SectionHeader>\n\n        <SectionHeader title='Statistics'>\n          {\n            isShowStat ?\n              <Statistics {...this.state}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              /> : <Notification title='No feedback given' />\n          }\n        </SectionHeader>\n      </>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}